1. State space :
    {freq Cardiaque, 
    Intensité de vibration, 
    fréquence des vibration (continu ou sporadique)
    motif suivi (null si pas de motif)}

2. Action
    - Augmenter intensité vibration 
    - Baisser intensité vibration
    - Augmenter fréquence des vibrations
    - Baisser fréquence des vibrations
    - Suivre un motif prédefini
    - Arreter de suivre un motif prédifini (on revient a un mode de vibration (random))
    - Changer de motif aléatoirement

3. Reward
    /*
        On prend sur les 5 derniers pas de temps la variation moyenne 
        de la fréquence Cardiaque
        Si freque evolue pas mais frequence haute : phase de plateau donc recompense doit etre positive 
            car on veut rester dans cette etat la
    */

4 Transition 
    Impossible a predeterminer, c'est pour ca qu'on fait de l'apprentissage

Je pense qu'il faut partir sur un DQN :
    - frequence cardiaque plage de {60 :: 180 } (normalement freq moyenne femme enivrion 70 et pour l'orgasme 156 (mait peut aller au dela)) donc 120 etat
    - niv d'inteniste on va dire 5 
    - freq vibration jusqu'a 5Hz donc 6 (0Hz,1Hz, ...,5Hz)
    - motif (arbitraire) 5 ( 4 motif + 1 null)
    ==> 18000 etat possible donc 18 000 ligne dans la Q value 
        On a donc une matrice de [18 000][7] ce qui est bcp trop gros
    
    Usage DQN spécialisé pour grand espace (ou continu) dans un model free environnement (on ne connait pas les transsition entre les etats)

Course of action du DQN :

    - Collect de data :
        A partir des simulations crée par Hugo/flo/équipe, on va créee des batch contenant des "experience" (etat, action prise, etat suivant, recompense)
        Ces batch seront contenu dans une classe Replay memory qui nous permettrait de pouvoir conserver plein de batch (je crois que c'ets mieux parce que du coup ca rend l'apprentissage IID blablabla)

    - Training du DQN (mais du coup ca c'est "juste" l'application/le codage de l'algo d'apprentissage la partie dur c'est celle d'au dessus)


Pour le code je me suis basé sur lui : https://gist.github.com/unnat5
 son code est "expliqué" la : https://unnatsingh.medium.com/deep-q-network-with-pytorch-d1ca6f40bfda
